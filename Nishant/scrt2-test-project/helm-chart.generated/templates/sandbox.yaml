##############################################################################################################################################
# DO NOT EDIT. Code generated and maintained by Armada. Changes to this file may be overwriten by armada                                     #
# To make changes to this file, use module metadata to own this file                                                                         #
# https://confluence.internal.salesforce.com/display/ARMADA/Customize+%28Offroad%29+Armada#Customize(Offroad)Armada-HelmChartOffroading      #
##############################################################################################################################################

# all things related to changing configuration for the armada sandbox environment type
{{- if eq (.Values.armadaSanbox | toString) "true" -}}
{{- $root_vip := printf "%s.%s.%s.%s.%s.%s.sfdc.cl" .Values.deployment.name .Release.Namespace .Values.falcon.cluster_name .Values.falcon.functional_domain .Values.falcon.falcon_instance (.Values.falcon.cloud_provider | lower) }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    app.armada.sfdc.com/ownership: "true"
  {{- if .Values.service.annotations }}
    {{- toYaml .Values.service.annotations | nindent 4 -}}
  {{- end }}
  labels:
    app: {{ .Values.deployment.name }}
    name: {{ .Values.service.name }}-ingress
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
    helm.sh/chart: {{ .Chart.Name }}
  {{- if .Values.service.labels }}
    {{- toYaml .Values.service.labels | nindent 4 -}}
  {{- end }}
  {{- range $label_name, $label_value := .Values.platform_labels }}
    {{ $label_name }}: {{ $label_value }}
  {{- end }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.deployment.name }}
  ports:
{{- range .Values.deployment.ports}}
    - name: {{ .name }}
      port: {{ .externalPort | default .port}}
      targetPort: {{ .port }}
{{- end }}

{{- range .Values.deployment.ports }}
{{- if ne (.type | default "Internal" | lower) "internal" }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $.Values.service.name }}-{{.name}}-ingress
  namespace: {{ $.Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    app.armada.sfdc.com/ownership: "true"
    external-dns.alpha.kubernetes.io/enabled: "true"
  {{- if hasPrefix "grpc" (.name | lower)}}
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  {{- end }}
  labels:
    app: {{ $.Values.deployment.name }}
    name: {{ $.Values.deployment.name }}-ingress
  {{- range $label_name, $label_value := $.Values.platform_labels }}
    {{ $label_name }}: {{ $label_value }}
  {{- end }}
spec:
  rules:
{{ if or (eq (.externalPort | print) "80") (eq (.externalPort | default .port | print) "7442") }}
  - host: {{ $root_vip }}
    http:
      paths:
      - backend:
          serviceName: {{ $.Values.service.name }}-ingress
          servicePort: {{ .externalPort | default .port }}
        path: /
{{- end }}
  - host: {{ index . "name" }}.{{ $root_vip }}
    http:
      paths:
      - backend:
          serviceName: {{ $.Values.service.name }}-ingress
          servicePort: {{ .externalPort | default .port }}
        path: /
{{- end }}
{{- end }}
{{- end }}


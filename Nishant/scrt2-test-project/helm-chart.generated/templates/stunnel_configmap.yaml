
{{- if eq (.Values.stunnel.enabled | toString) "true" }}
# DO NOT EDIT. Code generated by Armada Bots.

# reference doc: https://salesforce.quip.com/6lKhAiIzGxEl
apiVersion: v1
kind: ConfigMap
metadata: 
  name: stunnel-config-{{ include "armada.cell-prefix" . }}{{ .Values.deployment.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels" . | nindent 4 }}
data:
  stunnel.liveness-check: |-
    #!/bin/sh
    STUNNEL_PID_FILE=/var/run/stunnel.pid
    CERT_FILE=/etc/identity/client/certificates/client.pem

    function log {
        echo "$(date -u "+%Y-%m-%d %H:%M:%S +00") - $(basename $0) - $1"
    }

    pgrep -F $STUNNEL_PID_FILE > /dev/null
    if [ $? -ne 0 ]; then
        log "stunnel is not healthy. Fail liveness check"
        exit 1
    fi

    #Find how long the stunnel process has been running. This returns in seconds
    PROC_UPTIME=$(ps -o etimes= -p $(cat $STUNNEL_PID_FILE));

    #Check when the cert was installed
    CERT_AGE=$(echo $(($(date +%s) - $(date +%s -r $CERT_FILE))));

    DIFF=$(( $PROC_UPTIME - $CERT_AGE ));
    if [ $DIFF -lt 60 ]; then
        log "Certs are older than process."
        exit 0
    else
        log "Process is older than certs, failing liveness check"
        exit 1
    fi

  # Need to set the TCP_KEEPIDLE to 300 seconds to ensure that we keep the socket open. Please see
  # https://salesforce.quip.com/50BAA1nFMKcc#KeAACAjzsjF for more information. 
  stunnel.config: |-
    ;Protocol version (all, SSLv2, SSLv3, TLSv1)
    sslVersion = TLSv1.2
    ciphers=ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA
    foreground = yes
    debug = 7
    [publicproxy]
    client = yes
    accept = localhost:3128
    connect = publicproxy.publicproxy.local.sfdc.net:8443
    verify = 2
    CAfile = /etc/identity/ca/cacerts.pem
    cert = /etc/identity/client/certificates/client.pem
    key = /etc/identity/client/keys/client-key.pem
{{- end }}

